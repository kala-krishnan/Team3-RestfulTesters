{
    "requests": [
        {
            "LoginValid": {
				"scenario":"Check if Admin able to generate token with valid credential",
                "userLoginEmailId": "sdetorganizer@gmail.com",
                "password": "Apiphase@2",
				"statusCode":200,
				"statusText": "OK"
				
            }
        },
		{
		          "LoginInvalid": {
					"scenario":"Check if Admin able to generate token with invalid credential",
		              "userLoginEmailId": "",
		              "password": "Apiphase@2",
					"statusCode":400,
					"statusText": "OK",
					"authType": "No Auth"
		          }
		      },
		      
		      {
					"GetAllUsers":{
				    "scenario": "Get all Users",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				 {
					"GetAllUserInvalidEndpoint":{
				    "scenario": "Get all Users with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetAllActiveUsers":{
				    "scenario": "Get all active Users",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllActiveUsersInvalidEndpoint":{
				    "scenario": "Get all active Users with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetActiveEmailUsers":{
				    "scenario": "Get all Active Users Email id",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetActiveEmailUsersInvalidEndpoint":{
				    "scenario": "Get all active Users Email id with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetAllRoles":{
				    "scenario": "Get all roles",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllRolesInvalidEndpoint":{
				    "scenario": "Get all roles with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetAllUserwithRoles":{
				    "scenario": "Get all users with roles",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllUserwithRolesInvalidEndpoint":{
				    "scenario": "Get all Users with roles with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetAllUserStatusCount":{
				    "scenario": "Get all User Status Count",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllUserStatusCountInvalidEndpoint":{
				    "scenario": "Get all Users status count with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetUserbyUserId":{
				    "scenario": "Get Users by UserId",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetUserByUserIDInvalidEndpoint":{
				    "scenario": "Get Users by UserId with inValid Endpoint",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found"
					}
				},
				{
					"GetUserByInvalidUserId":{
				    "scenario": "Get Users by UserId with inValid Id",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found",
				    "id": 9090909
					}
				},
					{
					"GetUserByInvalidSpecialCharacterUserId":{
				    "scenario": "Get Users by UserId with inValid Special Character",
				    "authType": "Bearer Token",
				    "statusCode": 404,
				    "statusText": "HTTP/1.1 404 Not Found",
				    "id": "******"
					}
				},
					{
					"PutUserRolebyUserId":{
				    "scenario": "Update User roles by UserId",
				    "roleId":"R02",
				    "userRoleStatus" :"active",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "OK"
					}},
					{
					"PutUserRolebyUserIdInvalidRoleID":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"R021",
				    "userRoleStatus" :"active",
				    "authType": "Bearer Token",
				    "statusCode": 400,
				    "statusText": "Bad Request"
					}
					
				},
				{
					"PutUserRolebyUserIdSpecialRoleID":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"(****",
				    "userRoleStatus" :"active",
				    "authType": "Bearer Token",
				    "statusCode": 400,
				    "statusText": "Bad Request"
					}
					
				},
				{
					"PutUserRolebyUserIdwithoutRoleID":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"",
				    "userRoleStatus" :"active",
				    "authType": "Bearer Token",
				    "statusCode": 400,
				    "statusText": "Bad Request"
					}
					
				},
				{
					"PutUserRolebyUserIdwithoutRolestatus":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"R02",
				    "userRoleStatus" :"",
				    "authType": "Bearer Token",
				    "statusCode": 400,
				    "statusText": "Bad Request"
					}
					
				},
				{
					"PutUserRolebyUserIdSpecialRolestatus":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"R02",
				    "userRoleStatus" :"&&&&",
				    "authType": "Bearer Token",
				    "statusCode": 400,
				    "statusText": "Bad Request"
					}
					
				},
				{
					"PutUserRolebyUserIdInvalidRolestatus":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"R02",
				    "userRoleStatus" :"actives",
				    "authType": "Bearer Token",
				    "statusCode": 400,
				    "statusText": "Bad Request"
					}
					
				},{
					"PutUserRolebyUserIdInvalidEndpoint":{
				    "scenario": "Update User roles invalid by UserId",
				    "roleId":"R02",
				    "userRoleStatus" :"active",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "OK"
					}
					
				}
]
}