{
    "requests": [
        {
            "LoginValid": {
				"scenario":"Check if Admin able to generate token with valid credential",
                "userLoginEmailId": "sdetorganizer@gmail.com",
                "password": "Apiphase@2",
				"statusCode":200,
				"statusText": "OK",
				"authType": "No Auth"
            }
        },
		{
            "LoginInvalid": {
                "scenario":"Check if Admin able to generate token with invalid credential",
                "userLoginEmailId": "",
                "password": "Apiphase@2",
                "statusCode":400,
                "statusText": "OK",
                "authType": "No Auth"
                }
		      },
        {
            "CreateProgramValid": {
				"scenario":"Add Program with Bearer Token",
                "programName": "teamhackthonthree",
                "programDescription": "hackathon test three",
                "programStatus": "active",
				"statusCode":201,
				"statusText": "Created",
				"authType": "Bearer Token"
            }
        },
        {
            "AddBatchValid": {
				"scenario":"Add Batch valid",    
                "batchDescription": "TestBatches",
                "batchName": "APIBatchRest13",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "programId": 16449,
				"statusCode":201,
				"statusText": "HTTP/1.1 201 Created"
            }
        },
		{
            "AddBatchEmptyNonMandatory": {
				"scenario":"Add Batch with Non Mandatory field empty",    
                "batchDescription": "",
                "batchName": "APIBatchRestful13",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "programId": 16449,
				"statusCode":201,
				"statusText": "HTTP/1.1 201 Created"
				
            }
        },
			{
	           "AddBatchExistingName": {
				   "scenario":"Add Batch with existing Batch Name",    
	               "batchDescription": "TestBatches",
	               "batchName": "APIBatchRest1",
	               "batchNoOfClasses": 10,
	               "batchStatus": "Active",
	               "programId": 16449,
					"statusCode":400,
					"statusText": "HTTP/1.1 400 Bad Request"
					
	           }
		  },
		  
		  {
  	           "AddBatchEmptyMandatory": {
  				   "scenario":"Add Batch with Mandatory field empty",    
  	               "batchDescription": "TestBatches",
  	               "batchName": "",
  	               "batchNoOfClasses": 10,
  	               "batchStatus": "",
  	               "programId": 0,
  					"statusCode":400,
  					"statusText": "HTTP/1.1 400 Bad Request"
  					
  	           }
  		  },
		  {
	           "AddBatchNameStrtWithNo": {
				   "scenario":"Add Batch with Name Starts with number",    
	               "batchDescription": "TestBatches",
	               "batchName": "3TestBatch",
	               "batchNoOfClasses": 10,
	               "batchStatus": "Active",
	               "programId": 16449,
					"statusCode":400,
					"statusText": "HTTP/1.1 400 Bad Request"
					
	           }
		  },
		  {
  	           "AddBatchStatusInactive": {
  				   "scenario":"Add Batch with Inactive status",    
  	               "batchDescription": "TestBatches",
  	               "batchName": "TestAPIBatch001",
  	               "batchNoOfClasses": 10,
  	               "batchStatus": "Inactive",
  	               "programId": 16449,
  					"statusCode":400,
  					"statusText": "HTTP/1.1 400 Bad Request",
  					"contentType": "application/json"
  	           }
  		  },
		  {
  	           "AddBatchInvalidEp": {
  				   "scenario":"Add Batch with Invalid endpoint",    
  	               "batchDescription": "TestBatches",
  	               "batchName": "TestAPIBatch001",
  	               "batchNoOfClasses": 10,
  	               "batchStatus": "Active",
  	               "programId": 16449,
  					"statusCode":404,
  					"statusText": "HTTP/1.1 404 Not Found"
  	           }
  		  },
		{
            "GetAllBatchValid": {
				"scenario":"Search All Batch",    
				"statusCode":200,
				"statusText": "HTTP/1.1 200 OK"
				
            }
        },
		{
            "GetAllBatchInValidEP": {
				"scenario":"Search All Batch Invalid end point",    
				"statusCode":404,
				"statusText": "HTTP/1.1 404 Not Found"
				
            }
        },
        {
            "GetByBatchIDValid": {
				"scenario":"Search Batch by ID",   
				"id": 11959,  
				"statusCode":200,
				"statusText": "HTTP/1.1 200 OK"
				
            }
        },
		{
            "GetByBatchIDInactive": {
				"scenario":"Search Inactive Batch by ID",   
				"id": 11958,
				"statusCode":200,
				"statusText": "HTTP/1.1 200 OK"
				
            }
        },
		{
            "GetByBatchIDInvalid": {
				"scenario":"Search Invalid Batch by ID", 
				"id": 10101010,   
				"statusCode":404,
				"statusText": "HTTP/1.1 404 Not Found"
				
            }
        },
		{
            "GetByBatchIDInValidEP": {
				"scenario":"Search Batch by ID Invalid EndPoint",
				"id":11959,
				"statusCode":404,
				"statusText": "HTTP/1.1 404 Not Found"
				
            }
        },
        {
            "GetByBatchNameValid": {
				"scenario":"Search Batch by Name",
				"name":"APIBatchRest13",    
				"statusCode":200,
				"statusText": "HTTP/1.1 200 OK"
				
            }
        },
{
            "GetByBatchNameInactive": {
				"scenario":"Search Inactive Batch by Name",
				"name":"APIBatchDannie",    
				"statusCode":200,
				"statusText": "HTTP/1.1 200 OK"
				
            }
        },
{
            "GetByBatchNameInvalid": {
				"scenario":"Search Batch by Invalid Name",
				"name":"APIBatchRest_*",    
				"statusCode":404,
				"statusText": "HTTP/1.1 404 Not Found"
				
            }
        },
		{
            "GetByBatchNameInValidEP": {
				"scenario":"Search Batch by Name Invalid Endpoint",
				"name":"APIBatchRest13",    
				"statusCode":404,
				"statusText": "HTTP/1.1 404 Not Found"
				
            }
        },
        {
            "GetBatchByPrgmIDValid": {
				"scenario":"Search Batch by Program ID",    
				"statusCode":200,
				"statusText": "OK"
				
            }
        },
        {
            "PutBatchValid": {
				"scenario":"Update Batch Valid",    
				"statusCode":201,
				"statusText": "Created"
				
            }
        },
         {
					"GetAllUsers":{
				    "scenario": "Get all Users",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				 {
					"GetAllUserInvalidEndpoint":{
				    "scenario": "Get all Users with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllActiveUsers":{
				    "scenario": "Get all active Users",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllActiveUsersInvalidEndpoint":{
				    "scenario": "Get all active Users with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetActiveEmailUsers":{
				    "scenario": "Get all Active Users Email id",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetActiveEmailUsersInvalidEndpoint":{
				    "scenario": "Get all active Users Email id with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllRoles":{
				    "scenario": "Get all roles",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllRolesInvalidEndpoint":{
				    "scenario": "Get all roles with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllUserwithRoles":{
				    "scenario": "Get all users with roles",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllUserwithRolesInvalidEndpoint":{
				    "scenario": "Get all Users with roles with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllUserStatusCount":{
				    "scenario": "Get all User Status Count",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				},
				{
					"GetAllUserStatusCountInvalidEndpoint":{
				    "scenario": "Get all Users status count with inValid",
				    "authType": "Bearer Token",
				    "statusCode": 200,
				    "statusText": "HTTP/1.1 200 OK"
					}
				}
		
    ]
}
